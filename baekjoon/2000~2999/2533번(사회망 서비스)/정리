그림으로 설명하면 다음과 같음
1. 자식 노드가 없는 곳부터 시작을 한다.
=> 그림의 경우 5, 6, 9, 10, 11, 12
2. 자식이 없는 경우에 부모 노드는 무조건 얼리 어답터가 됨
3. 얼리 어답터가된 노드는 취급을 하지 않는다.
3-1. 7, 8은 얼리 어답터가 되어서 4번은 자식 노드가 없는 경우로 변하게 된다
4. 이 것을 깊이가 하나씩 올라가면서 루트노드가 나올 때 까지 하면 된다.

1이 루트라고 잡고 진행을 할것임
=> 예외는 그림2임
=> 7번 노드가 6번 노드를 얼리 어답터로 해서 8번 노드가 그냥 지나가는 거임

-----------------------------------------------------------------
최대한 DP로 생각해서 풀기

[방법1.]
1. 리프 노드의 부모 노드는 무조건 얼리 어답터
2. 자식 노드가 모두 얼리 어답터이면 패스 -> 1번의 경우는 제외
3. 자식 노드가 얼리 어답터가 아니면 부모 노드는 얼리 어답터

[방법2.]
1. 무조건 리프 노드까지 들어감
1-1. 리프 노드는 1임, 백트랙할 때, 1을 보내줌 => 1을 받으면 얼리 어답터임
2. 얼리 어답터는 0을 반환해줌
3. 만약에 자식 노드가 1을 반환했다면 당연히 얼리 어답터가 됨

[방법3.]
1. 무조건 리프 노드까지 들어감
2. 각각의 리프 노드에서 부모 노드로 계속 이동함
2-1. 이 과정에서 해당 리프 노드의 부모 노드는 얼리 어답터임
3. 모든 리프 노드에 대해서 위 과정을 수행함
4. 그럼 어느 순간 겹치는 부분이 생기는데, 이 부분에 대해서는 안하면 됨
4-1. 또한, 자식 노드가 얼리 어답터, 부모 노드가 얼리 어답터 이면
     그 위는 부모 노드가 얼리 어답터인 경우로 생각하면 됨

[방법4.]
점화식을 생각해내면 됨
2차원 DP로 할 것
dp[i]는 얼리 어답터 일때와, 아닐 때 총 값임
dp[현재 노드][얼리 어답터 O = 0] = min(dp[자식 노드][1], dp[자식 노드][0]) + dp[현재 노드][0]
dp[현재 노드][얼리 어답터 X = 1] = dp[자식 노드][0] + dp[현재 노드][1]

모든 노드에 대해서 얼리 어답터인 경우에는 1을 먼저 하고 시작해야함



[그림1.]예제
12
1 2
1 3
2 4
3 5
3 6
4 7
4 8
7 9
7 10
7 11
8 12

[그림2.]예제
10
1 6
6 7
1 3
6 8
8 5
5 4
4 9
4 10
9 2
