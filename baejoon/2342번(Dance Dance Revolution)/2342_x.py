"""
    문제 이름 : Dance Dance Revolution
    URL : https://www.acmicpc.net/problem/2342
    ----------------------------------------------
    <문제 설명>
    시작할 때를 제외하고 한 곳에 발이 두개가 동시에 있을 수 없다.
    0: 중앙, 1: 위, 2: 왼쪽, 3: 아래, 4 :오른쪽
    원점에서 다른 점으로 가는 건 힘이 2
    인접한 곳을 가는건 힘이 3
    반대 편으로 가는건 힘이 4
    현재 위치는 힘이 1
"""

foot_loc = list(map(int, input().split()))




# 1. 두 발이 원점에서 떨어질 때 까지 그냥 구하기
# 2. 두 발이 떨어진 시점에서 dp하기
# 내 기준은 오른 발이 먼저 움직이게 하기

# 각각의 dp 원소들은 그 위치에서 힘이 가장 적게 들었을때 그 값임

# 문제의 핵심 정리
# 무조건 움직이는게 더 나은 경우인가를 확인해야함
# ex) 왼발: 위, 오른발: 왼쪽 라고 가정함
## 아래 왼쪽 이라고 하면 4 + 1 이 최고의 수임, 근데 그냥 하면 3 + 3이 되어서 최고의 수가 안됨
# 가장 증가하는 부분수열을 구하는 것 처럼 하면 될듯
# 현재의 발이 움직일 필요가 없으면 그 경우가 힘이 제일 적게 드는 부분임 -> 그래서 처음에 모든 발이 원점에서 벗어나야함
# 그 칸에 가장 최근 인덱스 번호를 딕셔너리에 저장
# 좀 더 생각하기
# 1 -> 2 -> 3 -> 1 -> 2 이 경우도 생각하기
# 위의 예시 핵심 정리 추가하기

# 핵심은 그냥 더 작은 값을 넣으면 된다는 것임
