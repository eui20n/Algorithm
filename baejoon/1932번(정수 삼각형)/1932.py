# 정수 삼각형
# 정수가 적힌 삼각형이 주어진다
# 위에서 부터 아래로 더해나간다
# 더하는 조건은 왼쪽 대각선 아래나 오른쪽 대각선 아래의 수이다
# 이 조건에 맞추어서 더할때 최대값을 출력해라

N = int(input())
T = [list(map(int,input().split())) for _ in range(N)]

dp = [[0]*501 for _ in range(N+1)]


if len(T) <= 1:
    dp[1][0] = T[0][0]
else:
    dp[1][0] = T[0][0]
    dp[2][0] = T[0][0] + T[1][0]
    dp[2][1] = T[0][0] + T[1][1]


for x in range(3,N+1):
    for y in range(1,len(T[x-1])):
        dp[x][0] = dp[x-1][0] + T[x-1][0]
        dp[x][y] = max(dp[x-1][y-1]+T[x-1][y],dp[x-1][y]+T[x-1][y])
        
        
print(max(dp[N]))
    
# 풀이
# 먼저 처음은 정해줘야함, 나는 2번째까지 정해줌
# 그 다음은 더하면서 최대값을 dp리스트에 넣으면 됨
# 이 과정에서 차원은 입력받은 T의 차원과 같게함으로 dp수행을 할때 더할 수 있게 해줌
# 반복문은 처음은 차원의 시작을 정하고 다음은 그 차원에서의 인덱스를 정하는데, 원래 입력받은 T의 크기 만큼 함
# 이유는 나는 T의 차원을 쓰기로 해서, n의 범위인 500으로 하면 T의 범위를 벗어나서 연산이 안됨
# 그 후 점화식 연산하고, 원하는 차원의 최댓값을 출력하면 됨

    
    